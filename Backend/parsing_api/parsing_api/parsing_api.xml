<?xml version="1.0"?>
<doc>
    <assembly>
        <name>parsing_api</name>
    </assembly>
    <members>
        <member name="T:parsing_api.Classes.AllowCrossSiteJson">
            <summary>
            Аттрибут для фронтенда - без него не работало
            </summary>
        </member>
        <member name="M:parsing_api.Classes.AllowCrossSiteJson.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Переопределен метод для добавления заголовка
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:parsing_api.Classes.ParsingFactory">
            <summary>
            Класс для обработки задач парсинга данных
            </summary>
        </member>
        <member name="M:parsing_api.Classes.ParsingFactory.Parse(Support.Models.ParsingRequest)">
            <summary>
            Метод инициализации парсинга данных
            </summary>
            <param name="parsingRequest"></param>
        </member>
        <member name="M:parsing_api.Classes.ParsingFactory.GetPortal(System.Int32)">
            <summary>
            Вернуть объект портала по его Id
            </summary>
            <param name="portalId"></param>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Controllers.DataController">
            <summary>
            Контроллер для получения клиентской информации из БД
            </summary>
        </member>
        <member name="M:parsing_api.Controllers.DataController.LogCount">
            <summary>
            Ненужный запрос - скоро удалим
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Controllers.DataController.GetByParameters(Support.Models.FrontRequest)">
            <summary>
            Поиск информации по заданным параметрам
            </summary>
            <param name="frontRequest">Объект с заданными параметрами</param>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Controllers.DictionaryController">
            <summary>
            Методы загрузки словарей из БД
            </summary>
        </member>
        <member name="M:parsing_api.Controllers.DictionaryController.GetRegions">
            <summary>
            Загрузка регионов из БД
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Controllers.DictionaryController.GetPortals">
            <summary>
            Загрузка списка порталов
            </summary>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Controllers.ParsingController">
            <summary>
            Основной контроллер API - методы работы для парсинга данных
            </summary>
        </member>
        <member name="M:parsing_api.Controllers.ParsingController.SetParsing(Support.Models.ParsingRequest)">
            <summary>
            Запрос на создание задания парсинга определенного веб-портала на указанную дату
            </summary>
            <param name="parsingRequest"></param>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Controllers.ParsingController.GetJobs">
            <summary>
            Получить все задания
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Controllers.ParsingController.GetJob(System.String)">
            <summary>
            Получить задачу по ее Id
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Controllers.TestController">
            <summary>
            Контроллер для тест запросов
            </summary>
        </member>
        <member name="M:parsing_api.Controllers.TestController.Test">
            <summary>
            Тест метод для проверки доступности API
            </summary>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Data.BackendDb">
            <summary>
            Контест для работы с БД
            </summary>
        </member>
        <member name="P:parsing_api.Data.BackendDb.ParsingRequests">
            <summary>
            Данные запросов парсинга
            </summary>
        </member>
        <member name="P:parsing_api.Data.BackendDb.Regions">
            <summary>
            Таблица регионов страны
            </summary>
        </member>
        <member name="P:parsing_api.Data.BackendDb.Portals">
            <summary>
            Таблица веб-порталов для парсинга
            </summary>
        </member>
        <member name="P:parsing_api.Data.BackendDb.ParsingJobs">
            <summary>
            Данные запросов на парсинг
            </summary>
        </member>
        <member name="M:parsing_api.Data.BackendDb.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{parsing_api.Data.BackendDb})">
            <summary>
            Инициализация контекста работы с БД
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:parsing_api.Data.DataBase">
            <summary>
            Класс для выполнения запросов в БД
            </summary>
        </member>
        <member name="F:parsing_api.Data.DataBase.connString">
            <summary>
            Строка подключения к БД. Сервер находится в локальной сети, поэтому в настройки не вынесено. Надеюсь не страшно )
            </summary>
        </member>
        <member name="M:parsing_api.Data.DataBase.LogCount">
            <summary>
            Тестовый метод, который планируется убрать или поменять
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Data.DataBase.GetRegions">
            <summary>
            Получить список регионов
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Data.DataBase.GetPortals">
            <summary>
            Получить список веб-порталов для парсинга
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Data.DataBase.CreateJob(Support.Models.ParsingRequest)">
            <summary>
            Метод создания нового задания парсинга данных
            </summary>
            <param name="parsingRequest"></param>
        </member>
        <member name="M:parsing_api.Data.DataBase.GetJobs">
            <summary>
            Метод получения всех задач в БД
            </summary>
            <returns></returns>
        </member>
        <member name="M:parsing_api.Data.DataBase.GetJobById(System.String)">
            <summary>
            Метод получения задачи по ее Id
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Program">
            <summary>
            Главный класс приложения
            </summary>
        </member>
        <member name="M:parsing_api.Program.Main(System.String[])">
            <summary>
            Точка входа в приложение
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:parsing_api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Установка конфигурации хоста
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:parsing_api.Startup">
            <summary>
            Класс при запуске приложения
            </summary>
        </member>
        <member name="M:parsing_api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Конструктор класса запуска
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:parsing_api.Startup.Configuration">
            <summary>
            Конфигурация приложения
            </summary>
        </member>
        <member name="M:parsing_api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавление сервисов в приложение
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:parsing_api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Настройка сервисов приложения
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
